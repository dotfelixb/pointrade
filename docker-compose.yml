version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pointtrade
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d  
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 5  

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - "5672:5672"
      - "15672:15672" # Management UI
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 30s
      timeout: 30s
      retries: 5
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq  

  server:
    build:
      context: ./server
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - LOG_LEVEL=info
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/pointtrade
      - AMQP_URL=amqp://user:password@rabbitmq
      - VERIFY_EMAIL_QUEUE=verification.email
      - WALLET_QUEUE=wallet.create
      - PROCESS_QUEUE=transaction.process
      - REVERSE_QUEUE=transaction.reverse
      - JWT_SECRET=kjgjhgSetrer25fsdhgfAhbjhgf!g8
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

  worker:
    build:
      context: ./worker
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - LOG_LEVEL=info
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/pointtrade
      - AMQP_URL=amqp://user:password@rabbitmq
      - VERIFY_EMAIL_QUEUE=verification.email
      - WALLET_QUEUE=wallet.create
      - PROCESS_QUEUE=transaction.process
      - REVERSE_QUEUE=transaction.reverse
      - BALANCE_QUEUE=wallet.balance
      - JWT_SECRET=kjgjhgSetrer25fsdhgfAhbjhgf!g8
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

volumes:
  postgres-data:
  rabbitmq-data: